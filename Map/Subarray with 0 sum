NOTE: SUBARRAYS ARE CONTIGUOUS
  bool subArrayExists(int arr[], int n)
{
    int sum=0;
    unordered_map <int,int> m;
    m[0]++;
    for(int i=0;i<n;i++)
    {
        sum+=arr[i];
        if(m.find(sum)!=m.end())
           return true;
        m[sum]++;   
    }
     return false;  
}

/*ALTERNATIVE SOLN 1
bool subArrayExists(int arr[], int n)
{
    //Your code here
    int sum=0, i;
    unordered_map <int, bool> mp;
    for(i=0; i<n; i++)
    {
        sum+=arr[i];
        if(sum==0 || mp.count(sum)==true)
            return true;
        else
            mp[sum]=true;
    }
    return false;
}

ALTERNATIVE SOLN 2
bool subArrayExists(int arr[], int n)
{
    unordered_set<int>st;
    int i,summ=0,j;
    for(i=0;i<n;i++)
    {
        summ = summ + arr[i];
        if(summ==0)
        {
            return true;
        }
        if(st.find(summ)!=st.end())
        {
            return true;
        }
        else
        {
            st.insert(summ);
        }
    }
    return false;
}
*/
